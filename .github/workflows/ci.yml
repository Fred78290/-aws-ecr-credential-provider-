name: aws-ecr-credential-provider
on:
  push:
    branches:
      - '*'
    tags:
      - v*
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.5.0
      - name: Cache vendor
        uses: actions/cache@v3.0.11
        env:
          cache-name: cache-vendor
        with:
          path: vendor
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('go.mod') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
      - name: Prepare
        id: prep
        run: ls -lR
      - name:  Setup Go environment
        uses: actions/setup-go@v3.0.0
        with:
          go-version: 1.19
      - name: Build binary
        shell: bash
        run: make all
      # Directory created with a docker run having user root
      - name: Fix directory owner
        shell: bash
        run: sudo chown -R $USER vendor
      - name: Output
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v3.1.0
        with:
          name: binaries
          path: ecr-credential-provider-*
          if-no-files-found: error
  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    name: Deploy
    runs-on: ubuntu-latest
    env:
      REGISTRY: ${{ secrets.REGISTRY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.5.0
        with:
          submodules: true 
      - name: Prepare
        id: prep
        run: |
          TAG=pr
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            TAG=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            TAG=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          fi
          echo ::set-output name=tag::${TAG}
          echo "Build with tag=${TAG}"
        # echo ::set-env name=RELEASE_VERSION::${TAG}
      - name:  Setup Go environment
        uses: actions/setup-go@v3.0.0
        with:
          go-version: 1.19
      - name: Download binaries
        uses: actions/download-artifact@v3.0.0
        with:
          name: binaries
          path: ecr-credential-provider-*
      - name: Release
        uses: softprops/action-gh-release@v0.1.14
        with:
          tag_name: ${{ steps.prep.outputs.tag }}
          release_name: Release ${{ steps.prep.outputs.tag }}
          draft: false
          files: |
            ecr-credential-provider-amd64
            ecr-credential-provider-arm64
            ecr-credential-provider.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # You don't need to add this in secrets it's by default.      
